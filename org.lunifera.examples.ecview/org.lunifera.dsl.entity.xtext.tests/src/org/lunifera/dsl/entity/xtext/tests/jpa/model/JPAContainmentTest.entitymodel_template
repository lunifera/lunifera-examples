/*
 * Copyright (c) 2011 - 2012, Florian Pirchner - lunifera.org
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 * 		Florian Pirchner - Initial implementation
 */
generator settings { 
	compilerType= org.lunifera.annotation.processor.JPA
	checked lifecycle
}   

package org.lunifera.dsl.^entity.xtext.tests.jpa.model {
 
	import javax.persistence.*
	
	datatype long jvmType java.lang.Long
	datatype String jvmType java.lang.String
	 
	/**
	 * Test 112233
	 */
	entity Client {
		// property 
		@GeneratedValue(strategy=GenerationType::IDENTITY)
		@Id
		var long id 
		var String name
	 
		collection Contract contracts opposite client composition
	}  
	
	entity Contract {
		@GeneratedValue(strategy=GenerationType::IDENTITY)
		@Id
		var long id 
		var String name
		
		refers Client client opposite contracts 
		refers Project project opposite contract
	} 
	
	entity Project {
		@GeneratedValue(strategy=GenerationType::IDENTITY)
		@Id
		var long id 
		var String name
		
		refers Contract contract opposite project composition
		collection Developer developers  opposite project
		refers Manager manager opposite projects
	} 
	   
	entity Manager {
		@GeneratedValue(strategy=GenerationType::IDENTITY)
		@Id
		var long id 
		var String name
		
		collection Project projects opposite manager
		
		def int getProjectsCount() {
			if(projects != null)
				projects.size
			else
				0
		}
	} 
	
	entity Developer {
		@GeneratedValue(strategy=GenerationType::IDENTITY)
		@Id
		var long id 
		var String name
		refers Project project	opposite developers
	} 
}
